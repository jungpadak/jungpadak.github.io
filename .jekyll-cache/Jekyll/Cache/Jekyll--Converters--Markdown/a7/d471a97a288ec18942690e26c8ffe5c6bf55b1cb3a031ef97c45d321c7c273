I"m<blockquote>
  <p><a href="https://codility.com/programmers/lessons/4-counting_elements/max_counters/">문제출처</a></p>
</blockquote>

<h2 id="문제">문제</h2>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>You are given N counters, initially set to 0, and you have two possible operations on them:

increase(X) − counter X is increased by 1,
max counter − all counters are set to the maximum value of any counter.
A non-empty zero-indexed array A of M integers is given. This array represents consecutive operations:

if A[K] = X, such that 1 ≤ X ≤ N, then operation K is increase(X),
if A[K] = N + 1 then operation K is max counter.
For example, given integer N = 5 and array A such that:

    A[0] = 3
    A[1] = 4
    A[2] = 4
    A[3] = 6
    A[4] = 1
    A[5] = 4
    A[6] = 4
the values of the counters after each consecutive operation will be:

    (0, 0, 1, 0, 0)
    (0, 0, 1, 1, 0)
    (0, 0, 1, 2, 0)
    (2, 2, 2, 2, 2)
    (3, 2, 2, 2, 2)
    (3, 2, 2, 3, 2)
    (3, 2, 2, 4, 2)
The goal is to calculate the value of every counter after all operations.

Write a function:

def solution(N, A)
that, given an integer N and a non-empty zero-indexed array A consisting of M integers, returns a sequence of integers representing the values of the counters.

The sequence should be returned as:

a structure Results (in C), or
a vector of integers (in C++), or
a record Results (in Pascal), or
an array of integers (in any other programming language).
For example, given:

    A[0] = 3
    A[1] = 4
    A[2] = 4
    A[3] = 6
    A[4] = 1
    A[5] = 4
    A[6] = 4
the function should return [3, 2, 2, 4, 2], as explained above.

Assume that:

N and M are integers within the range [1..100,000];
each element of array A is an integer within the range [1..N + 1].
Complexity:

expected worst-case time complexity is O(N+M);
expected worst-case space complexity is O(N),
beyond input storage (not counting the storage required for input arguments).
Elements of input arrays can be modified.
</code></pre></div></div>

<h2 id="풀이코드">풀이코드</h2>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">solution</span><span class="p">(</span><span class="n">N</span><span class="p">,</span> <span class="n">A</span><span class="p">):</span>
    <span class="n">result</span> <span class="o">=</span> <span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">*</span> <span class="n">N</span>
    <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="n">A</span><span class="p">:</span>
        <span class="k">if</span> <span class="mi">1</span> <span class="o">&lt;=</span> <span class="n">i</span> <span class="o">&lt;=</span> <span class="n">N</span><span class="p">:</span>
            <span class="n">result</span><span class="p">[</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span> <span class="o">+=</span> <span class="mi">1</span>
        <span class="k">else</span><span class="p">:</span>
            <span class="n">result</span> <span class="o">=</span> <span class="p">[</span><span class="nb">max</span><span class="p">(</span><span class="n">result</span><span class="p">)]</span> <span class="o">*</span> <span class="n">N</span> <span class="c1"># O(N)
</span>    <span class="k">return</span> <span class="n">result</span>
</code></pre></div></div>

<h2 id="다른사람-코드">다른사람 코드</h2>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">solution</span><span class="p">(</span><span class="n">N</span><span class="p">,</span> <span class="n">A</span><span class="p">):</span>

    <span class="n">counters</span> <span class="o">=</span> <span class="n">N</span> <span class="o">*</span> <span class="p">[</span><span class="mi">0</span><span class="p">]</span>
    <span class="n">next_max_counter</span> <span class="o">=</span>  <span class="n">max_counter</span> <span class="o">=</span> <span class="mi">0</span>

    <span class="k">for</span> <span class="n">oper</span> <span class="ow">in</span> <span class="n">A</span><span class="p">:</span>
        <span class="k">if</span> <span class="n">oper</span> <span class="o">&lt;=</span> <span class="n">N</span><span class="p">:</span>
            <span class="n">current_counter</span> <span class="o">=</span> <span class="n">counters</span><span class="p">[</span><span class="n">oper</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="nb">max</span><span class="p">(</span><span class="n">counters</span><span class="p">[</span><span class="n">oper</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span> <span class="o">+</span><span class="mi">1</span><span class="p">,</span> <span class="n">max_counter</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span>
            <span class="n">next_max_counter</span> <span class="o">=</span> <span class="nb">max</span><span class="p">(</span><span class="n">current_counter</span><span class="p">,</span> <span class="n">next_max_counter</span><span class="p">)</span>
        <span class="k">else</span><span class="p">:</span>
            <span class="n">max_counter</span> <span class="o">=</span> <span class="n">next_max_counter</span>

    <span class="k">return</span> <span class="p">[</span><span class="n">c</span> <span class="k">if</span> <span class="n">c</span> <span class="o">&gt;</span> <span class="n">max_counter</span> <span class="k">else</span> <span class="n">max_counter</span> <span class="k">for</span> <span class="n">c</span> <span class="ow">in</span> <span class="n">counters</span><span class="p">]</span>
</code></pre></div></div>
:ET